// import React, { useEffect, useState } from "react";
// import io from "socket.io-client";
// import axios from "axios";
// import { jwtDecode } from "jwt-decode";
// import ModalButton from "../component/Model";

// const Message = () => {
//   const [socket, setSocket] = useState(null);
//   const [message, setMessage] = useState("");
//   const [users, setUsers] = useState([]);
//   const [isSelected, setIsSelected] = useState(false);
//   const [selectedUser, setSelectedUser] = useState(null);
//   const [user, setUser] = useState(null);
//   const [groups, setGroups] = useState([]);

//   useEffect(() => {
//     const newSocket = io("http://localhost:5000");
//     setSocket(newSocket);

//     const token = localStorage.getItem("token");
//     const user = jwtDecode(token);
//     setUser(user)

//     newSocket.emit("addUser", user);

//     return () => {
//       if (newSocket) {
//         newSocket.disconnect();
//       }
//     };
//   }, []);

//   useEffect(() => {
//     if (socket) {
//       socket.on("getUsers", async (usersList) => {
//         const fetchedUsers = await Promise.all(
//           usersList.map(async (element) => {
//             const response = await axios.get(
//               `http://localhost:8000/api/v1/user/${element.userId}`
//             );
//             return response.data[0];
//           })
//         );

//         const filterdUsers = fetchedUsers.filter(
//           (element) => element._id !== user.id
//         );
//         setUsers(filterdUsers);
//       });

//       socket.on("getGroups", (groups) => {
//         setGroups(groups)
//       })

//       return () => {
//         socket.off("getUsers");
//       };
//     }
//   }, [socket]);

//   useEffect(() => {
//     if (socket) {
//       const handleMessage = (data) => {
//         console.log(data);
//       };
//       socket.on("message", handleMessage);
//       return () => {
//         socket.off("message", handleMessage);
//       };
//     }
//   }, [socket]);

//   const handleOnSend = () => {
//     if (socket && socket.connected) {
//       socket.emit("send message", { to: selectedUser, message });
//       setMessage("");
//     } else {
//       console.error("Socket is not connected");
//     }
//   };

//   const handleOnSelect = (element) => {
//     setIsSelected(true);
//     setSelectedUser(element._id);
//   };

//   return (
//     <>
//       <div
//         style={{ width: "100vw" }}
//         className="d-flex justify-content-center align-items-center flex-column"
//       >
//         <div
//           className="d-flex flex-row justify-content-between"
//           style={{ height: "91vh", width: "100vw" }}
//         >
//           <div className="d-flex flex-column justify-content-between">
//             {
//               socket && <ModalButton socket={socket} />
//             }
//             {isSelected && (
//               <div
//                 className="d-flex flex-row justify-content-around"
//                 style={{ width: "80vw" }}
//               >
//                 <div>
//                   <label htmlFor="message">Message:</label>
//                   <input
//                     type="text"
//                     style={{ width: "60vw", height: "50px" }}
//                     className="fs-4"
//                     value={message}
//                     onChange={(e) => setMessage(e.target.value)}
//                   />
//                 </div>
//                 <div className="d-flex align-items-center">
//                   <button
//                     className="btn btn-primary"
//                     style={{ width: "130px" }}
//                     onClick={handleOnSend}
//                   >
//                     Send
//                   </button>
//                 </div>
//               </div>
//             )}
//           </div>
//           <div
//             className="d-flex flex-column rounded"
//             style={{ width: "20vw", border: "1px solid grey" }}
//           >
//             {users.length > 0 ? (
//               users.map((element, index) => (
//                 <div
//                   key={index}
//                   className="bg-primary mb-3 text-light d-flex justify-content-center align-items-center"
//                   style={{
//                     height: "50px",
//                     width: "inherit",
//                     cursor: "pointer",
//                   }}
//                   onClick={() => handleOnSelect(element)}
//                 >
//                   <p>{element.userName}</p>
//                 </div>
//               ))
//             ) : (
//               <p>No one is online</p>
//             )}
//             {
//               groups.length > 0 && groups.map((element, index) => {
//                 return (
//                   <div key={index} className="bg-primary mb-3 text-light d-flex justify-content-center align-items-center" style={{ height: "50px", width: "inherit", cursor: "pointer" }} onClick={handleOnSelect}>
//                     <p>{element} </p>
//                   </div>
//                 )
//               })
//             }
//           </div>
//         </div>
//       </div>
//     </>
//   );
// };

// export default Message;



import React from "react"
import { InputGroup, Form } from "react-bootstrap"
import { FaSearch } from "react-icons/fa"

const Message = () => {
  return (
    <>
      <div className="container-fluid" style={{ height: "90vh", width: "100vw" }}>
        <div className="row h-100 no-gutters">
          <div className="col-3 bg-info ">
            <h2>Chats</h2>
            <div className="w-75 bg-danger position-relative">
              <FaSearch className="position-relative end-0 " style={{ zIndex: "2" }} />
              <InputGroup size="sm" className="mb-3">
                <Form.Control
                  aria-label="Small"
                  aria-describedby="inputGroup-sizing-sm"
                />
              </InputGroup>
            </div>
          </div>
          <div className="col-9 bg-secondary">Message</div>
        </div>

      </div >

    </>
  )
}

export default Message
